[package]
name = "readyset-adapter"
version = "0.1.0"
publish = false
authors = ["Readyset Technology, Inc. <info@readyset.io>"]
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
ahash = { workspace = true }
anyhow = { workspace = true }
clap = { workspace = true, features = ["derive", "env"] }
fail = { workspace = true }
futures-util = { workspace = true }
tokio = { workspace = true, features = ["full"] }
tracing = { workspace = true, features = ["release_max_level_debug"] }
vec1 = { workspace = true }
itertools = { workspace = true }
async-trait = { workspace = true }
readyset-util = { path = "../readyset-util" }
metrics = { workspace = true }
metrics-exporter-prometheus = { workspace = true }
futures = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
hyper = { workspace = true, features = ["stream", "server"] }
tokio-stream = { workspace = true, features = ["net"] }
tower = { workspace = true, features = ["util"] }
dashmap = { workspace = true }
mysql_common = { workspace = true }
bincode = { workspace = true }
parking_lot = { workspace = true }
sqlformat = { workspace = true }
indexmap = { workspace = true }
lru = { workspace = true }
crossbeam-skiplist = { workspace = true }
slab = { workspace = true }
xxhash-rust = { workspace = true }
rand = { workspace = true }
streaming-iterator = { workspace = true }

readyset-adapter-types = { path = "../readyset-adapter-types/" }
readyset-alloc = { path = "../readyset-alloc/" }
readyset-client = { path = "../readyset-client/" }
readyset-errors = { path = "../readyset-errors/" }
readyset-data = { path = "../readyset-data/" }
readyset-server = { path = "../readyset-server" }
dataflow-expression = { path = "../dataflow-expression" }
readyset-tracing = { path = "../readyset-tracing" }
readyset-dataflow = { path = "../readyset-dataflow" }

readyset-client-metrics = { path = "../readyset-client-metrics" }
readyset-telemetry-reporter = { path = "../readyset-telemetry-reporter" }
readyset-sql = { path = "../readyset-sql" }
readyset-sql-parsing = { path = "../readyset-sql-parsing" }
readyset-sql-passes = { path = "../readyset-sql-passes" }
readyset-version = { path = "../readyset-version" }
health-reporter = { path = "../health-reporter" }
database-utils = { path = "../database-utils" }

[dev-dependencies]
criterion = { workspace = true }
proptest = { workspace = true }
rand = { workspace = true }
test-strategy = { workspace = true }

[lib]
path = "src/lib.rs"

[[bench]]
name = "parse"
harness = false

[[bench]]
name = "hash"
harness = false

[features]
failure_injection = ["fail/failpoints"]

[lints]
workspace = true
