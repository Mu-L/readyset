statement ok
create table dogs (id int, name text);

statement ok
insert into dogs values
  (1, 'kidnap'),
  (2, 'snoopy');

statement ok
create table tags (d_id int, tag text);

statement ok
insert into tags values
  (1, 'bbb'),
  (1, 'aaa'),
  (1, 'ccc'),
  (2, 'yyy'),
  (2, 'zzz');

# simple query (no NULLs in data)
query T
select group_concat(t.tag separator '::') from tags t where d_id = 1;
----
bbb::aaa::ccc

statement ok
insert into tags values (1, 'bbb');

# simple query (no NULLs in data)
query T
select group_concat(t.tag separator '::') from tags t where d_id = 1;
----
bbb::aaa::ccc::bbb

# simple query (with NULLs in data)
statement ok
insert into tags values
  (1, NULL),
  (1, 'aaa');

# simple query (with NULLs in data)
query T
select group_concat(t.tag separator '::') from tags t where d_id = 1;
----
bbb::aaa::ccc::bbb::aaa

# simple query (with NULLs and dupes!)
query T
select group_concat(distinct t.tag separator '::') from tags t where d_id = 1;
----
aaa::bbb::ccc


# multiple aggregations
query IT
select sum(d_id), group_concat(t.tag separator '::') from tags t where d_id = 1;
----
6
bbb::aaa::ccc::bbb::aaa

# join/group by clause
query ITT
select d.id, d.name, group_concat(t.tag separator '::') as tag_arr
  from dogs as d
  left join tags as t on d.id = t.d_id
  where d.id = 1
  group by d.id, d.name;
----
1
kidnap
bbb::aaa::ccc::bbb::aaa

# order by asc 
query T
select group_concat(t.tag  order by tag separator '::') from tags t where d_id = 1;
----
aaa::aaa::bbb::bbb::ccc

# order by asc with distinct
query T
select group_concat(distinct t.tag order by tag separator '::') from tags t where d_id = 1;
----
aaa::bbb::ccc

# order by desc
query T
select group_concat(t.tag order by tag desc separator '::') from tags t where d_id = 1;
----
ccc::bbb::bbb::aaa::aaa

# order by desc with distinct
query T
select group_concat(distinct t.tag order by tag desc separator '::') from tags t where d_id = 1;
----
ccc::bbb::aaa


#######
# test only empty/NULL inputs

# empty results
query
select group_concat(tag) from tags where d_id = 3;
----
NULL

statement ok
insert into tags values
  (3, NULL);

# only NULL rows
query
select group_concat(tag) from tags where d_id = 3;
----
NULL


######
## post-lookup aggregations

# simple lookup
query T
select group_concat(t.tag separator '::') from tags t where d_id in (1, 2);
----
bbb::aaa::ccc::bbb::aaa::yyy::zzz


# distinct, but add in a value for id 2 that overlaps with id 1'd values
statement ok
insert into tags values (2, 'AAA');

query T
select group_concat(distinct t.tag separator '::') from tags t where d_id in (1, 2);
----
aaa::AAA::bbb::ccc::yyy::zzz

# order by
query T
select group_concat(t.tag order by tag desc separator '::') from tags t where d_id in (1, 2);
----
zzz::yyy::ccc::bbb::bbb::AAA::aaa::aaa

# test only empty/NULL inputs
# empty results
query
select group_concat(tag) from tags where d_id in (12345, 23456);
----
NULL

statement ok
insert into tags values
  (12345, NULL);

# only NULL rows
query
select group_concat(tag) from tags where d_id in (12345, 23456);
----
NULL

statement ok
insert into tags values
  (23456, NULL);

# only NULL rows
query
select group_concat(tag) from tags where d_id in (12345, 23456);
----
NULL


#####
# test expressions in aggregate arguments

# test with function expression (upper)
query T
select group_concat(upper(t.tag) separator '::') from tags t where d_id = 1;
----
BBB::AAA::CCC::BBB::AAA

# test with function expression (upper) - post-lookup aggregation
query T
select group_concat(upper(t.tag) separator '::') from tags t where d_id in (1, 2);
----
BBB::AAA::CCC::BBB::AAA::YYY::ZZZ::AAA

# test with binary operation (arithmetic)
statement ok
create table nums (id int, val int);

statement ok
insert into nums values (1, 10), (1, 20), (1, 30);

query T
select group_concat(val + 5 separator ',') from nums where id = 1;
----
15,25,35

query T
select group_concat(val * 2 separator ',') from nums where id = 1;
----
20,40,60

# test with binary operation (arithmetic) - post-lookup aggregation
statement ok
insert into nums values (2, 100), (2, 200);

query T
select group_concat(val + 5 separator ',') from nums where id in (1, 2);
----
15,25,35,105,205

# test with string concatenation function
query T
select group_concat(concat(t.tag, '-suffix') separator '::') from tags t where d_id = 2;
----
yyy-suffix::zzz-suffix::AAA-suffix

# test with string concatenation function - post-lookup aggregation
query T
select group_concat(concat(t.tag, '-suffix') separator '::') from tags t where d_id in (1, 2);
----
bbb-suffix::aaa-suffix::ccc-suffix::bbb-suffix::aaa-suffix::yyy-suffix::zzz-suffix::AAA-suffix
