statement ok
create table dogs (id int, name text);

statement ok
insert into dogs values
  (1, 'kidnap'),
  (2, 'snoopy');

statement ok
create table tags (d_id int, tag text);

statement ok
insert into tags values
  (1, 'bbb'),
  (1, 'aaa'),
  (1, 'ccc'),
  (2, 'yyy'),
  (2, 'zzz');


# simple query (no NULLs in data)
query T
select string_agg(t.tag, '::') from tags t where d_id = 1;
----
bbb::aaa::ccc

statement ok
insert into tags values (1, 'bbb');

# simple query (no NULLs in data)
query T
select string_agg(t.tag, '::') from tags t where d_id = 1;
----
bbb::aaa::ccc::bbb

# simple query (separator is NULL)
query T
select string_agg(t.tag, NULL) from tags t where d_id = 1;
----
bbbaaacccbbb


# simple query (with NULLs in data)
statement ok
insert into tags values
  (1, NULL),
  (1, 'aaa');

query T
select string_agg(t.tag, '::') from tags t where d_id = 1;
----
bbb::aaa::ccc::bbb::aaa

# simple query (with NULLs and dupes!)
query T
select string_agg(distinct t.tag, '::') from tags t where d_id = 1;
----
aaa::bbb::ccc


# multiple aggregations
# Note: the sum() should include a count for the NULL row, even though
# it is not output by string_agg().
query IT
select sum(d_id), string_agg(t.tag, '::') from tags t where d_id = 1;
----
6
bbb::aaa::ccc::bbb::aaa


# join and group by clause
query ITT
select d.id, d.name, string_agg(t.tag, '::') as tag_arr
  from dogs as d
  left join tags as t on d.id = t.d_id
  where d.id = 1
  group by d.id, d.name;
----
1
kidnap
bbb::aaa::ccc::bbb::aaa

# order by asc
query T
select string_agg(t.tag, '::' order by tag) from tags t where d_id = 1;
----
aaa::aaa::bbb::bbb::ccc

# order by asc with distinct
query T
select string_agg(distinct t.tag, '::' order by tag) from tags t where d_id = 1;
----
aaa::bbb::ccc

# order by desc
query T
select string_agg(t.tag, '::' order by tag desc) from tags t where d_id = 1;
----
ccc::bbb::bbb::aaa::aaa

# order by desc with distinct
query T
select string_agg(distinct t.tag, '::' order by tag desc) from tags t where d_id = 1;
----
ccc::bbb::aaa


#######
# test only empty/NULL inputs

# empty results
query
select string_agg(tag, '::') from tags where d_id = 3;
----
NULL

statement ok
insert into tags values
  (3, NULL);

# only NULL rows
query
select string_agg(tag, '::') from tags where d_id = 3;
----
NULL


#####
# post-lookup aggregations

query T
select string_agg(t.tag, '::') from tags t where d_id in (1, 2);
----
bbb::aaa::ccc::bbb::aaa::yyy::zzz
