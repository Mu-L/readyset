statement ok
CREATE TABLE articles (
  id int(11) NOT NULL PRIMARY KEY,
  title text
) ;

statement ok
insert into articles (id, title)
values
(1, 'a'),
(2, 'b'),
(3, 'c'),
(4, 'd'),
(5, 'e');

statement ok
CREATE TABLE recommendations (
  user_id int(11) NOT NULL,
  article_id int(11) NOT NULL
);

statement ok
insert into recommendations
(user_id, article_id)
values
(1, 1),
(1, 2),
(1, 5),
(2, 1),
(2, 3),
(2, 4),
(3, 3),
(3, 4),
(3, 5);

onlyif readyset
statement ok
create cache from
select A.id, A.title
FROM articles A, recommendations R
WHERE A.id = R.article_id AND R.user_id BETWEEN ? AND ?
ORDER BY A.title, A.id LIMIT 20

onlyif readyset
statement ok
create cache from
SELECT A.id
FROM articles A, recommendations R
WHERE A.id = R.article_id AND R.user_id BETWEEN ? AND ?
ORDER BY A.title, A.id LIMIT 20

query IT rowsort
select A.id, A.title
FROM articles A, recommendations R
WHERE A.id = R.article_id AND R.user_id BETWEEN ? AND ?
ORDER BY A.title, A.id LIMIT 20
? = 1
? = 2
----
1
a
1
a
2
b
3
c
4
d
5
e

query I nosort
SELECT A.id
FROM articles A, recommendations R
WHERE A.id = R.article_id AND R.user_id BETWEEN ? AND ?
ORDER BY A.title, A.id LIMIT 20
? = 1
? = 2
----
1
1
2
3
4
5

statement ok
CREATE TABLE title_basics (
    tconst text NOT NULL,
    titletype text,
    primarytitle text,
    originaltitle text,
    isadult boolean,
    startyear integer,
    endyear integer,
    runtimeminutes integer,
    genres text
);

statement ok
CREATE TABLE title_ratings (
    tconst text NOT NULL,
    averagerating numeric,
    numvotes integer
);


onlyif readyset
statement ok
CREATE CACHE FROM SELECT count(*) FROM title_ratings
JOIN title_basics ON title_ratings.tconst = title_basics.tconst
WHERE title_basics.startyear = 2000 AND title_ratings.averagerating > 5;

onlyif readyset
statement ok
CREATE CACHE FROM SELECT count(*) FROM title_ratings
JOIN title_basics ON title_ratings.tconst = title_basics.tconst
WHERE title_basics.endyear = 2000 AND title_ratings.averagerating > 5;
